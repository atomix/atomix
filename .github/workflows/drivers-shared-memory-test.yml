# Code generated by build-workflows script. DO NOT EDIT.
# source: drivers/shared-memory/.github/workflows/test.yml

# SPDX-FileCopyrightText: 2023-present Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

name: Test shared-memory driver

on:
  push:
    branches:
      - 'master'
      - 'actions'
    paths:
      - 'controller/**'
      - 'sidecar/**'
      - 'drivers/shared-memory/**'
      - 'stores/shared-memory/**'
      - 'test/**'
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-primitives:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup Helm
        uses: ./.github/actions/setup-helm

      - name: Create kind cluster
        uses: helm/kind-action@v1.4.0
        with:
          cluster_name: kind

      - name: Build atomix/cli
        uses: docker/build-push-action@v3
        with:
          context: cli
          file: cli/build/Dockerfile
          tags: atomix/cli
          load: true
          push: false

      - name: Build atomix/sidecar
        uses: docker/build-push-action@v3
        with:
          context: .
          file: drivers/shared-memory/test/Dockerfile
          tags: atomix/sidecar
          load: true
          push: false

      - name: Load atomix/sidecar
        run: kind load docker-image atomix/sidecar

      - name: Build atomix/sidecar-controller
        uses: docker/build-push-action@v3
        with:
          context: sidecar
          file: sidecar/build/controller/Dockerfile
          tags: atomix/sidecar-controller
          load: true
          push: false

      - name: Load atomix/sidecar-controller
        run: kind load docker-image atomix/sidecar-controller

      - name: Build atomix/controller
        uses: docker/build-push-action@v3
        with:
          context: controller
          file: controller/build/controller/Dockerfile
          tags: atomix/controller
          load: true
          push: false

      - name: Load atomix/controller
        run: kind load docker-image atomix/controller

      - name: Build atomix/controller-init
        uses: docker/build-push-action@v3
        with:
          context: controller
          file: controller/build/controller-init/Dockerfile
          tags: atomix/controller-init
          load: true
          push: false

      - name: Load atomix/controller-init
        run: kind load docker-image atomix/controller-init

      - name: Build atomix/shared-memory-controller
        uses: docker/build-push-action@v3
        with:
          context: stores/shared-memory
          file: stores/shared-memory/build/controller/Dockerfile
          tags: atomix/shared-memory-controller
          load: true
          push: false

      - name: Load atomix/shared-memory-controller
        run: kind load docker-image atomix/shared-memory-controller

      - name: Build atomix/shared-memory-node
        uses: docker/build-push-action@v3
        with:
          context: stores/shared-memory
          file: stores/shared-memory/build/node/Dockerfile
          tags: atomix/shared-memory-node
          load: true
          push: false

      - name: Load atomix/shared-memory-node
        run: kind load docker-image atomix/shared-memory-node

      - name: Build atomix/test
        uses: docker/build-push-action@v3
        with:
          context: test
          file: test/build/Dockerfile
          tags: atomix/test
          load: true
          push: false

      - name: Load atomix/test
        run: kind load docker-image atomix/test

      - name: Install core controller
        run: helm install -n kube-system atomix-controller ./controller/chart --set image.pullPolicy=Never --set init.image.pullPolicy=Never --wait

      - name: Install sidecar controller
        run: helm install -n kube-system atomix-sidecar-controller ./sidecar/chart --set image.pullPolicy=Never --wait

      - name: Install store controller
        run: helm install -n kube-system atomix-shared-memory-controller ./stores/shared-memory/chart --set image.pullPolicy=Never --wait

      - name: Setup tests
        run: kubectl create -f drivers/shared-memory/test/setup.yaml

      - name: Install tests
        run: helm install test ./test/chart -f drivers/shared-memory/test/suite.yaml --set image.pullPolicy=Never --wait

      - name: Test Counter/v1
        run: helm test test --filter name=test-counter-v1

      - name: Test Map/v1
        run: helm test test --filter name=test-map-v1
