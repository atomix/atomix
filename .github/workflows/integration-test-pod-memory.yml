# SPDX-FileCopyrightText: 2023-present Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

name: Pod memory integration tests

on:
  push:
    branches:
      - 'master'
    paths:
      - 'controller/**'
      - 'sidecar/**'
      - 'drivers/pod-memory/**'
      - 'stores/pod-memory/**'
      - 'test/**'
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-controller:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: controller
          file: controller/build/controller/Dockerfile
          tags: atomix/controller
          outputs: type=docker,dest=/tmp/controller.tar

      - name: Share image
        uses: actions/upload-artifact@v3
        with:
          name: controller
          path: /tmp/controller.tar

  build-controller-init:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: controller
          file: controller/build/controller-init/Dockerfile
          tags: atomix/controller-init
          outputs: type=docker,dest=/tmp/controller-init.tar

      - name: Share image
        uses: actions/upload-artifact@v3
        with:
          name: controller-init
          path: /tmp/controller-init.tar

  build-sidecar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: .github/configs/shared-memory/Dockerfile
          tags: atomix/sidecar
          outputs: type=docker,dest=/tmp/sidecar.tar

      - name: Share image
        uses: actions/upload-artifact@v3
        with:
          name: sidecar
          path: /tmp/sidecar.tar

  build-sidecar-controller:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: sidecar
          file: sidecar/build/controller/Dockerfile
          tags: atomix/sidecar-controller
          outputs: type=docker,dest=/tmp/sidecar-controller.tar

      - name: Share image
        uses: actions/upload-artifact@v3
        with:
          name: sidecar-controller
          path: /tmp/sidecar-controller.tar

  build-pod-memory-controller:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: stores/pod-memory
          file: stores/pod-memory/build/controller/Dockerfile
          tags: atomix/pod-memory-controller
          outputs: type=docker,dest=/tmp/pod-memory-controller.tar

      - name: Share image
        uses: actions/upload-artifact@v3
        with:
          name: pod-memory-controller
          path: /tmp/pod-memory-controller.tar

  build-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: test
          file: test/build/Dockerfile
          tags: atomix/test
          outputs: type=docker,dest=/tmp/test.tar

      - name: Share image
        uses: actions/upload-artifact@v3
        with:
          name: test
          path: /tmp/test.tar

  run-tests:
    runs-on: ubuntu-latest

    needs:
      - build-controller
      - build-controller-init
      - build-sidecar
      - build-sidecar-controller
      - build-pod-memory-controller
      - build-tests

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup Helm
        uses: ./.github/actions/setup-helm

      - name: Create kind cluster
        uses: helm/kind-action@v1.4.0
        with:
          cluster_name: kind

      - name: Fetch atomix/sidecar
        uses: actions/download-artifact@v3
        with:
          name: sidecar
          path: /tmp

      - name: Fetch atomix/sidecar-controller
        uses: actions/download-artifact@v3
        with:
          name: sidecar-controller
          path: /tmp

      - name: Fetch atomix/controller
        uses: actions/download-artifact@v3
        with:
          name: controller
          path: /tmp

      - name: Fetch atomix/controller-init
        uses: actions/download-artifact@v3
        with:
          name: controller-init
          path: /tmp

      - name: Fetch atomix/pod-memory-controller
        uses: actions/download-artifact@v3
        with:
          name: pod-memory-controller
          path: /tmp

      - name: Fetch atomix/test
        uses: actions/download-artifact@v3
        with:
          name: test
          path: /tmp

      - name: Load Docker images
        run: |
          kind load image-archive /tmp/controller.tar
          kind load image-archive /tmp/controller-init.tar
          kind load image-archive /tmp/sidecar.tar
          kind load image-archive /tmp/sidecar-controller.tar
          kind load image-archive /tmp/pod-memory-controller.tar
          kind load image-archive /tmp/test.tar

      - name: Install core controller
        run: helm install -n kube-system atomix-controller ./controller/chart --set image.pullPolicy=Never --set init.image.pullPolicy=Never --wait

      - name: Install sidecar controller
        run: helm install -n kube-system atomix-sidecar-controller ./sidecar/chart --set image.pullPolicy=Never --wait

      - name: Install store controller
        run: helm install -n kube-system atomix-pod-memory-controller ./stores/pod-memory/chart --set image.pullPolicy=Never --wait

      - name: Setup tests
        run: kubectl create -f .github/configs/shared-memory/setup.yaml

      - name: Install tests
        run: helm install test ./test/chart -f .github/configs/shared-memory/suite.yaml --set image.pullPolicy=Never --wait

      - name: Test Counter/v1
        run: helm test test --filter name=test-counter-v1

      - name: Test Map/v1
        run: helm test test --filter name=test-map-v1

      - name: Record k8s status
        if: failure()
        run: |
          echo "kubectl get pods"
          kubectl get pods
          echo "kubectl get pods -n kube-system"
          kubectl get pods -n kube-system
          echo "kubectl get storageprofiles"
          kubectl get storageprofiles
          echo "kubectl get datastores"
          kubectl get datastores
          echo "kubectl get podmemorystores"
          kubectl get podmemorystores
