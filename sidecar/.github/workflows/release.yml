# SPDX-FileCopyrightText: 2023-present Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

name: Release Sidecar

on:
  push:
    tags:
      - 'sidecar/v*'

concurrency:
  group: release
  cancel-in-progress: false

jobs:
  parse-and-validate-version:
    runs-on: ubuntu-latest
    outputs:
      semantic-version: ${{ steps.parse-version.outputs.semantic-version }}
      prerelease-version: ${{ steps.parse-version.outputs.prerelease-version }}
      minor-version: ${{ steps.parse-version.outputs.minor-version }}
      patch-version: ${{ steps.parse-version.outputs.patch-version }}
    steps:
      - name: Parse and validate release version
        id: parse-version
        uses: ./.github/actions/parse-version
        with:
          prefix: sidecar/

  build-and-push:
    runs-on: ubuntu-latest
    needs: parse-and-validate-version
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Docker
        uses: ./.github/actions/setup-docker
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Setup Go
        uses: ./.github/actions/setup-go

      - name: Build controller prerelease
        env:
          TAGS: ${{ format('latest,v{0}', needs.parse-and-validate-version.outputs.prerelease-version) }}
        run: make controller
        working-directory: controller
        if: needs.parse-and-validate-version.outputs.prerelease-version != ''

      - name: Build controller release
        env:
          TAGS: ${{ format('stable,latest,v{0},v{1}', needs.parse-and-validate-version.outputs.minor-version, needs.parse-and-validate-version.outputs.patch-version) }}
        run: make controller
        working-directory: controller
        if: needs.parse-and-validate-version.outputs.prerelease-version == ''

      - name: Push atomix/sidecar-controller prerelease
        run: docker push atomix/sidecar-controller:v${{ needs.parse-and-validate-version.outputs.prerelease-version }}
        if: needs.parse-and-validate-version.outputs.prerelease-version != ''

      - name: Push atomix/sidecar-controller minor
        run: docker push atomix/sidecar-controller:v${{ needs.parse-and-validate-version.outputs.minor-version }}
        if: needs.parse-and-validate-version.outputs.prerelease-version == ''

      - name: Push atomix/sidecar-controller patch
        run: docker push atomix/sidecar-controller:v${{ needs.parse-and-validate-version.outputs.patch-version }}
        if: needs.parse-and-validate-version.outputs.prerelease-version == ''

      - name: Push atomix/sidecar-controller stable
        run: docker push atomix/sidecar-controller:stable
        if: needs.parse-and-validate-version.outputs.prerelease-version == ''

      - name: Push atomix/sidecar-controller latest
        run: docker push atomix/sidecar-controller:latest

      - name: Build sidecar prerelease
        env:
          TAGS: ${{ format('latest,v{0}', needs.parse-and-validate-version.outputs.prerelease-version) }}
        run: make sidecar
        working-directory: controller
        if: needs.parse-and-validate-version.outputs.prerelease-version != ''

      - name: Build sidecar release
        env:
          TAGS: ${{ format('stable,latest,v{0},v{1}', needs.parse-and-validate-version.outputs.minor-version, needs.parse-and-validate-version.outputs.patch-version) }}
        run: make sidecar
        working-directory: controller
        if: needs.parse-and-validate-version.outputs.prerelease-version == ''

      - name: Push atomix/sidecar prerelease
        run: docker push atomix/sidecar:v${{ needs.parse-and-validate-version.outputs.prerelease-version }}
        if: needs.parse-and-validate-version.outputs.prerelease-version != ''

      - name: Push atomix/sidecar minor
        run: docker push atomix/sidecar:v${{ needs.parse-and-validate-version.outputs.minor-version }}
        if: needs.parse-and-validate-version.outputs.prerelease-version == ''

      - name: Push atomix/sidecar patch
        run: docker push atomix/sidecar:v${{ needs.parse-and-validate-version.outputs.patch-version }}
        if: needs.parse-and-validate-version.outputs.prerelease-version == ''

      - name: Push atomix/sidecar stable
        run: docker push atomix/sidecar:stable
        if: needs.parse-and-validate-version.outputs.prerelease-version == ''

      - name: Push atomix/sidecar latest
        run: docker push atomix/sidecar:stable

  package-and-release:
    runs-on: ubuntu-latest
    needs:
      - parse-and-validate-version
      - build-and-push
    steps:
      - name: Setup Helm
        uses: ./.github/actions/setup-helm

      - name: Update chart dependencies
        run: helm dep update sidecar/chart

      - name: Package Helm chart
        run: |
          helm package sidecar/chart \
            --version ${{ needs.parse-and-validate-version.outputs.semantic-version }} \
            --app-version "v${{ needs.parse-and-validate-version.outputs.semantic-version }}" \
            --destination .deploy

      - name: Publish Helm chart
        uses: helm/chart-releaser-action@v1.5.0
        with:
          skip_packaging: true
        env:
          CR_TOKEN: "${{ github.token }}"
          CR_PACKAGE_PATH: .deploy
          CR_SKIP_EXISTING: true
